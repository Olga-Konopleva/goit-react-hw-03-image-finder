{"version":3,"sources":["components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","servises/images-api.js","App.js","index.js"],"names":["ImageGalleryItem","webformatURL","largeImageURL","onShowModal","className","onClick","src","alt","data-src","Button","type","ImageGallery","gallery","loader","map","id","length","color","height","width","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","value","autoComplete","autoFocus","placeholder","onChange","e","target","root","document","querySelector","Modal","children","onClose","onEsc","code","useEffect","window","addEventListener","removeEventListener","createPortal","currentTarget","axios","defaults","baseURL","page","pageSize","get","then","data","hits","App","setGallery","setPage","isLoading","setIsLoading","showModal","setShowModal","setLargeImageURL","fetchQuery","toggleModal","prev","options","imagesApi","scrollTo","top","documentElement","scrollHeight","behavior","finally","query","console","dir","dataset","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4b028a1f.chunk.js","sourcesContent":["const ImageGalleryItem = ({ webformatURL, largeImageURL, onShowModal }) => {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={onShowModal}>\n      <img\n        src={webformatURL}\n        alt=\"\"\n        className=\"ImageGalleryItem-image\"\n        data-src={largeImageURL}\n      />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","const Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n","import ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\nimport Button from '../Button/Button';\nimport Loader from 'react-loader-spinner';\n\nconst ImageGallery = ({ gallery, onClick, loader, onShowModal }) => {\n  return (\n    <div className=\"container\">\n      <ul className=\"ImageGallery\">\n        {gallery.map(({ id, webformatURL, largeImageURL }) => (\n          <ImageGalleryItem\n            key={id}\n            webformatURL={webformatURL}\n            largeImageURL={largeImageURL}\n            onShowModal={onShowModal}\n          />\n        ))}\n      </ul>\n      <div className=\"button_container\">\n        {!loader && gallery.length > 0 && <Button onClick={onClick} />}\n        {loader && (\n          <Loader type=\"ThreeDots\" color=\"#303f9f\" height={80} width={80} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageGallery;\n","import { useState } from 'react';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  const handleSearchQuery = e => setSearchQuery(e.target.value);\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          value={searchQuery}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleSearchQuery}\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst root = document.querySelector('#modal-root');\n\nconst Modal = ({ children, onClose }) => {\n  const handleOverlayClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  const onEsc = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n  //didMount\n  useEffect(() => {\n    window.addEventListener('keydown', onEsc);\n  }, []);\n\n  useEffect(() => {\n    // didUpdate\n    return () => window.removeEventListener('keydown', onEsc); //willUnmount\n  });\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleOverlayClick}>\n      <div className=\"Modal\">{children}</div>\n    </div>,\n    root,\n  );\n};\n\nexport default Modal;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api';\nconst API_KEY = '20154627-553297d4fa4e2a9272bf54c5b';\n\nconst fetchImages = ({ searchQuery = '', page = 1, pageSize = 12 }) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(({ data }) => data.hits);\n};\n\nexport default { fetchImages };\n","import { useState, useEffect } from 'react';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Modal from './components/Modal/Modal';\nimport imagesApi from './servises/images-api';\n\nfunction App() {\n  const [gallery, setGallery] = useState([]);\n  const [page, setPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImageURL, setLargeImageURL] = useState('');\n\n  useEffect(() => {\n    if (searchQuery) {\n      fetchQuery();\n    }\n  }, [searchQuery]);\n\n  const toggleModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n  const addModalImage = ({ target }) => {\n    console.dir(target);\n    const { src } = target.dataset;\n    setLargeImageURL(src);\n    toggleModal();\n  };\n\n  const onChangeQuery = query => {\n    setSearchQuery(query);\n    if (query !== searchQuery) {\n      setPage(1);\n      setGallery([]);\n    }\n  };\n\n  const fetchQuery = () => {\n    const options = { searchQuery, page };\n    setIsLoading(true);\n    imagesApi\n      .fetchImages(options)\n      .then(hits => {\n        if (hits.length === 0) {\n          return;\n        } else {\n          setLargeImageURL(hits.largeImageURL);\n          setPage(prev => prev + 1);\n          setGallery(gallery => [...gallery, ...hits]);\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      })\n      .finally(() => setIsLoading(false));\n  };\n  return (\n    <>\n      <div className=\"App\">\n        <Searchbar onSubmit={onChangeQuery} />\n        {searchQuery && (\n          <ImageGallery\n            gallery={gallery}\n            onClick={fetchQuery}\n            loader={isLoading}\n            onShowModal={addModalImage}\n          />\n        )}\n        {showModal && (\n          <Modal onClose={toggleModal}>\n            {' '}\n            <img src={largeImageURL} alt=\"image\" />{' '}\n          </Modal>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}